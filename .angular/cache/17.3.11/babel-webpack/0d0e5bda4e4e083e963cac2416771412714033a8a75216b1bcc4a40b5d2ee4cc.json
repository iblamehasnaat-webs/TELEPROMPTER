{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { TeleprompterComponent } from './components/teleprompter/teleprompter.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { StorageService } from './services/storage.service';\nimport * as i0 from \"@angular/core\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [StorageService],\n      imports: [BrowserModule, FormsModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, TeleprompterComponent, SettingsComponent],\n    imports: [BrowserModule, FormsModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","FormsModule","AppComponent","TeleprompterComponent","SettingsComponent","StorageService","AppModule","bootstrap","imports","declarations"],"sources":["/home/project/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { FormsModule } from '@angular/forms';\n\n    import { AppComponent } from './app.component';\n    import { TeleprompterComponent } from './components/teleprompter/teleprompter.component';\n    import { SettingsComponent } from './components/settings/settings.component';\n    import { StorageService } from './services/storage.service';\n\n    @NgModule({\n      declarations: [\n        AppComponent,\n        TeleprompterComponent,\n        SettingsComponent\n      ],\n      imports: [\n        BrowserModule,\n        FormsModule\n      ],\n      providers: [StorageService],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { }\n"],"mappings":"AACI,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,qBAAqB,QAAQ,kDAAkD;AACxF,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,cAAc,QAAQ,4BAA4B;;AAe3D,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRL,YAAY;IAAA;EAAA;;;iBADb,CAACG,cAAc,CAAC;MAAAG,OAAA,GAHzBR,aAAa,EACbC,WAAW;IAAA;EAAA;;;2EAKFK,SAAS;IAAAG,YAAA,GAXlBP,YAAY,EACZC,qBAAqB,EACrBC,iBAAiB;IAAAI,OAAA,GAGjBR,aAAa,EACbC,WAAW;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}