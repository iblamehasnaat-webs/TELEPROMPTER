{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class StorageService {\n  constructor() {}\n  saveSettings(settings) {\n    localStorage.setItem('teleprompterSettings', JSON.stringify(settings));\n  }\n  loadSettings() {\n    const settings = localStorage.getItem('teleprompterSettings');\n    return settings ? JSON.parse(settings) : {\n      horizontalFlip: false,\n      verticalFlip: false,\n      speed: 'medium',\n      font: 'Arial',\n      fontSize: 24,\n      theme: 'light'\n    };\n  }\n  saveText(text) {\n    localStorage.setItem('teleprompterText', text);\n  }\n  loadText() {\n    return localStorage.getItem('teleprompterText');\n  }\n  static {\n    this.ɵfac = function StorageService_Factory(t) {\n      return new (t || StorageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StorageService,\n      factory: StorageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["StorageService","constructor","saveSettings","settings","localStorage","setItem","JSON","stringify","loadSettings","getItem","parse","horizontalFlip","verticalFlip","speed","font","fontSize","theme","saveText","text","loadText","factory","ɵfac","providedIn"],"sources":["/home/project/src/app/services/storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n    import { Settings } from '../interfaces/settings.interface';\n\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class StorageService {\n\n      constructor() { }\n\n      saveSettings(settings: Settings) {\n        localStorage.setItem('teleprompterSettings', JSON.stringify(settings));\n      }\n\n      loadSettings(): Settings {\n        const settings = localStorage.getItem('teleprompterSettings');\n        return settings ? JSON.parse(settings) : {\n          horizontalFlip: false,\n          verticalFlip: false,\n          speed: 'medium',\n          font: 'Arial',\n          fontSize: 24,\n          theme: 'light'\n        };\n      }\n\n      saveText(text: string) {\n        localStorage.setItem('teleprompterText', text);\n      }\n\n      loadText(): string | null {\n        return localStorage.getItem('teleprompterText');\n      }\n    }\n"],"mappings":";AAMI,OAAM,MAAOA,cAAc;EAEzBC,YAAA,GAAgB;EAEhBC,YAAYA,CAACC,QAAkB;IAC7BC,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACxE;EAEAK,YAAYA,CAAA;IACV,MAAML,QAAQ,GAAGC,YAAY,CAACK,OAAO,CAAC,sBAAsB,CAAC;IAC7D,OAAON,QAAQ,GAAGG,IAAI,CAACI,KAAK,CAACP,QAAQ,CAAC,GAAG;MACvCQ,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;EACH;EAEAC,QAAQA,CAACC,IAAY;IACnBd,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEa,IAAI,CAAC;EAChD;EAEAC,QAAQA,CAAA;IACN,OAAOf,YAAY,CAACK,OAAO,CAAC,kBAAkB,CAAC;EACjD;;;uBA1BWT,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}